@import "tailwindcss";
@custom-variant dark (&:where(.dark, .dark *));

:root {
  /* either --dark-mode or --no-dark-mode */
  --color-scheme: var(--no--dark-mode);

  --font-family: "Rubik Variable", sans-serif;
  --fs-400: 1rem;
  --fs-500: 1.125rem;
  --fw-regular: 400;
  --fw-semi-bold: 500;

  /* COLORS */
  --blue-950: rgb(36, 42, 69);
  --blue-600: rgb(82, 103, 223);
  --grey-600: rgb(91, 96, 116);
  --grey-50: rgb(247, 247, 247);
  --red-400: rgb(250, 89, 89);

  /* settings */
  --no-dark-mode: light;
  --dark-mode: dark light;
}
@theme {
  --color-custom-blue-950: var(--blue-950);
  --color-custom-blue-600: var(--blue-600);
  --color-custom-grey-600: var(--grey-600);
  --color-custom-grey-50: var(--grey-50);
  --color-custom-red-400: var(--red-400);
}

/* FONTS */

/* @font-face {
  font-family: "DM Sans", sans-serif;
  src: url("/fonts/DMSans-VariableFont_opsz,wght.ttf") format("truetype");
  font-optical-sizing: auto;
  font-weight: 100 900;
  font-style: normal;
}
 */

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  color-scheme: var(--color-scheme);
  /* scroll-behavior: smooth; */
}

body {
  font-family: var(--font-family);
  font-optical-sizing: auto;
  font-weight: var(--fw-regular);
  font-style: normal;
  font-size: var(--fs-400);
  min-height: 100dvh;
}

@theme {
  @keyframes shake {
    0%,
    100% {
      transform: translateX(0);
    }
    20% {
      transform: translateX(-5px);
    }
    40% {
      transform: translateX(5px);
    }
    60% {
      transform: translateX(-5px);
    }
    80% {
      transform: translateX(5px);
    }
  }
}
@layer base {
  /* apply style globbaly accross the project
  If you want to add your own default base styles for specific HTML elements, use the @layer directive to add those styles to Tailwind's base layer */
}
@layer components {
  /* apply style for specific component or reusable ui elements like cards button etc ...
  Use the components layer for any more complicated classes you want to add to your project that you'd still like to be able to override with utility classes. */

  .container {
    width: min(50rem, 100% - 2rem);
    margin-inline: auto;
  }
}
@layer utilities {
  /* apply style for atomic style for individuals property like margin padding etc ...*/

  .text-alata {
    font-family: "Alata", sans-serif;
  }

  .visually-hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }
  .container-safe {
    width: 100%;
    max-width: 100vw;
    overflow-x: hidden;
  }
  .drop-shadow-custom {
    filter: drop-shadow(0px 10px 10px rgba(0, 0, 0, 0.0973));
  }
  .box-shadow-custom {
    box-shadow: 0px 10px 10px 0px rgba(0, 0, 0, 0.0973);
  }
  .box-shadow-btn:hover {
    box-shadow: 0px 0px 40px 0px rgba(83, 255, 170, 1);
  }

  .shake {
    animation: shake 0.4s ease-in-out;
  }
}

/* test */
/* you can use apply for base, component and utility */
.heading-1 {
  @apply text-center text-3xl leading-[135%] font-medium;
}

.heading-title {
  @apply text-center text-3xl leading-[135%] font-medium md:text-[3rem] lg:text-start;
}
.para-1 {
  @apply text-custom-blue-950/50 text-center text-[0.9375rem] leading-[165%] font-normal tracking-normal md:text-lg lg:text-start;
}
.para-2 {
  @apply text-custom-blue-950/50 text-center text-[0.9375rem] leading-[165%] font-normal tracking-normal md:text-lg;
}
.btn-primary {
  @apply bg-custom-blue-600 rounded-[5px] px-3.5 py-2 text-[0.9375rem] leading-[200%] font-medium text-white;
}
.btn-secondary {
  @apply bg-custom-grey-50 text-custom-blue-950 rounded-[5px] px-3.5 py-2 text-[0.9375rem] leading-[200%] font-medium;
}
.btn-destructive {
  @apply bg-custom-red-400 rounded-[5px] px-3.5 py-2 text-[0.9375rem] leading-[200%] font-medium text-white lg:px-9;
}

@layer components {
  .card {
    @apply m-10 rounded-lg bg-white px-6 py-8 shadow-xl ring-1 ring-slate-900/5 dark:bg-black;
  }
}
